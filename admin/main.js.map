{"version":3,"sources":["./src/app/@core/backend/common/common-backend.module.ts","./src/app/@core/backend/common/services/users.service.ts","./src/environments/environment.ts","./src/app/@core/module-import-guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/@core/core.module.ts","./src/app/@core/backend/common/api/users.api.ts","./src/app/app.module.ts","./src/app/@core/backend/common/services/api.service.ts","./src/app/@core/backend/common/api/http.service.ts","./src/app/app-routing.module.ts","./src/app/@core/backend/common/api/auth.api.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsersService } from './services/users.service';\r\nimport { UsersApi } from './api/users.api';\r\nimport { ApiService } from  './services/api.service';\r\n\r\nconst API = [UsersApi,ApiService];\r\n\r\nconst SERVICES = [\r\n  UsersService\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n})\r\nexport class CommonBackendModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UsersApi } from '../api/users.api';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n  userModel: any;\r\n  constructor(private api: UsersApi, private http: HttpClient) {}\r\n\r\n  AdminLogin(data): Observable<any[]> {\r\n    return this.api.AdminLogin(data);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'scrap-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { throwIfAlreadyLoaded } from './module-import-guard';\r\nimport { CommonBackendModule } from './backend/common/common-backend.module';\r\nimport { UsersService } from './backend/common/services/users.service';\r\nimport { HttpService } from './backend/common/api/http.service';\r\nimport { ApiService } from './backend/common/services/api.service';\r\nimport { UsersApi } from './backend/common/api/users.api';\r\nimport { AuthApi } from './backend/common/api/auth.api';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CommonBackendModule\r\n  ],\r\n  exports: [],\r\n  declarations: [],\r\n  providers:[\r\n    ApiService,\r\n    UsersService,\r\n    HttpService,\r\n    UsersApi,\r\n    AuthApi\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpService } from './http.service';\r\nimport { map } from 'rxjs/operators';\r\nimport  { ApiService } from '../services/api.service';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\r\n@Injectable()\r\nexport class UsersApi {\r\n  url : any;\r\n  private readonly apiController: string = 'users';\r\n\r\n  constructor(private api: HttpService, private http: HttpClient,private apiService: ApiService) {\r\n    this.url = apiService.url+'users/';\r\n   }\r\n\r\n   AdminLogin(data): Observable<any> {\r\n    let url = this.url + 'login/admin';\r\n    return this.http.post(url, data).pipe(map(result => {\r\n      return result;\r\n    }));\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport  { CoreModule } from './@core/core.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ApiService {\r\n  url: any;\r\n  constructor() {\r\n    this.url = 'http://localhost:3000/';\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n  constructor(private http: HttpClient) {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n  },\n  {\n    path: '',\n    loadChildren: () => import('./scrap/scrap.module').then(m => m.ScrapAppModule)\n  },\n  // { path: '', redirectTo: 'login', pathMatch: 'full' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpService } from './http.service';\r\nimport { map } from 'rxjs/operators';\r\nimport  { ApiService } from '../services/api.service';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\r\n@Injectable()\r\nexport class AuthApi {\r\n  url : any;\r\n  private readonly apiController: string = 'users';\r\n\r\n  constructor(private api: HttpService, private http: HttpClient,private apiService: ApiService) {\r\n    this.url = apiService.url+'users/';\r\n   }\r\n\r\n   session(): Observable<any> {\r\n    let url = this.url + 'session';\r\n    return this.http.get(url).pipe(map(result => {\r\n      return result;\r\n    }));\r\n  };\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}